var search_data = {"index":{"searchIndex":["apipagescontroller","applicationcontroller","applicationhelper","page","create()","destroy()","edit()","index()","new()","param_keys()","publish()","published()","show()","to_hash()","total_words()","unpublished()","update()","readme_for_app"],"longSearchIndex":["apipagescontroller","applicationcontroller","applicationhelper","page","apipagescontroller#create()","apipagescontroller#destroy()","apipagescontroller#edit()","apipagescontroller#index()","apipagescontroller#new()","page::param_keys()","apipagescontroller#publish()","apipagescontroller#published()","apipagescontroller#show()","page#to_hash()","apipagescontroller#total_words()","apipagescontroller#unpublished()","apipagescontroller#update()",""],"info":[["ApiPagesController","","ApiPagesController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Page","","Page.html","",""],["create","ApiPagesController","ApiPagesController.html#method-i-create","()","<p>Creates a new page from either query parameters or json. Responds with the\npage or errors.\n<p>Examples\n\n<pre>curl ...</pre>\n"],["destroy","ApiPagesController","ApiPagesController.html#method-i-destroy","()","<p>Removes a page from the database given an id.\n<p>Example\n\n<pre>curl -X DELETE localhost:3000/api_pages/4fcbf5608decb673a4000005</pre>\n"],["edit","ApiPagesController","ApiPagesController.html#method-i-edit","()",""],["index","ApiPagesController","ApiPagesController.html#method-i-index","()","<p>Responds with json/xml of every page in the database first sorted by\n:published_on backwards and then …\n"],["new","ApiPagesController","ApiPagesController.html#method-i-new","()",""],["param_keys","Page","Page.html#method-c-param_keys","()",""],["publish","ApiPagesController","ApiPagesController.html#method-i-publish","()","<p>Sets the :published_on of a page to the current time.\n<p>Example\n\n<pre>curl http://localhost:3000/api_pages/4fcbf5608decb673a4000005/publish</pre>\n"],["published","ApiPagesController","ApiPagesController.html#method-i-published","()","<p>Responds with json/xml of all pages in the system who have :published_on\nset to a time before now, sorted …\n"],["show","ApiPagesController","ApiPagesController.html#method-i-show","()","<p>Responds with json/xml of a page given an id.\n<p>Example\n\n<pre>curl http://localhost:3000/api_pages/4fcbf5608decb673a4000005</pre>\n"],["to_hash","Page","Page.html#method-i-to_hash","()",""],["total_words","ApiPagesController","ApiPagesController.html#method-i-total_words","()","<p>Responds with json/xml with the key “count” tagging the number of words in\na page (title + …\n"],["unpublished","ApiPagesController","ApiPagesController.html#method-i-unpublished","()","<p>Responds with json/xml of all pages in the system who have :published_on\nset to a time after now, nil, …\n"],["update","ApiPagesController","ApiPagesController.html#method-i-update","()","<p>Updates a page from query parameters or json given an id. The response is\nmeaningless.\n<p>Examples\n\n<pre>curl -X ...</pre>\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}